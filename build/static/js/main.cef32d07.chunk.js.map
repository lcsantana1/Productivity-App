{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Todo","_ref","todo","index","markTodo","removeTodo","react_default","a","createElement","className","style","textDecoration","isDone","text","Button","variant","onClick","FormTodo","_ref2","addTodo","_React$useState","React","useState","_React$useState2","Object","slicedToArray","value","setValue","Form","onSubmit","e","preventDefault","Group","Label","Control","type","onChange","target","placeholder","App","_React$useState3","_React$useState4","todos","setTodos","newTodos","toConsumableArray","splice","concat","map","Card","Body","key","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cef32d07.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, Card, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// function App() {\n//   return (\n//     <TodoList />\n//   )\n// }\nfunction Todo({ todo, index, markTodo, removeTodo }) {\n  return (\n    <div\n      className=\"todo\"\n      \n    >\n      <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }}>{todo.text}</span>\n      <div>\n        <Button variant=\"outline-success\" onClick={() => markTodo(index)}>✓/completed</Button>{' '}\n        <Button variant=\"outline-danger\" onClick={() => removeTodo(index)}>✕/remove</Button>\n      </div>\n    </div>\n  );\n}\n\nfunction FormTodo({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}> \n    <Form.Group>\n      <Form.Label><b>Productivity</b></Form.Label>\n      <Form.Control type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Add to Daily List\" />\n    </Form.Group>\n    <Button variant=\"primary mb-3\" type=\"submit\">\n      SUBMIT\n    </Button>\n  </Form>\n  );\n}\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    {\n      text: \"This is a daily list\",\n      isDone: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const markTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isDone = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1 className=\"text-center mb-4\">Productivity App</h1>\n        <FormTodo addTodo={addTodo} />\n        <div>\n          {todos.map((todo, index) => (\n            <Card>\n              <Card.Body>\n                <Todo\n                key={index}\n                index={index}\n                todo={todo}\n                markTodo={markTodo}\n                removeTodo={removeTodo}\n                />\n              </Card.Body>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n// contains all the todos and whether they are done or not\n// function App() {\n//   const [todos, setTodos] = React.useState([\n//     {\n//       text: \"This is a sampe todo\",\n//       isDone: false\n//     }\n//   ]);\n// }\n\n//adding todo's\n// const addTodo = text => {\n//   const newTodos = [...todos, { text }];\n//   setTodos(newTodos);\n// };\n\n//mark todo function\n// const markTodo = index => {\n//   const newTodos = [...todos];\n//   newTodos[index].isDone = true;\n//   setTodos(newTodos);\n// };\n\n//deleting the todo's\n\n\n//returning the JSX rendering -using a form todo component\n// return (\n//   <div className=\"app\">\n//     <div className=\"container\">\n//       <h1 className=\"text-center mb-4\">Todo List</h1>\n//       <FormTodo addTodo={addTodo} />\n//       <div>\n//         {todos.map((todo, index) => (\n//           <Card>\n//             <Card.Body>\n//               <Todo\n//               key={index}\n//               index={index}\n//               todo={todo}\n//               markTodo={markTodo}\n//               removeTodo={removeTodo}\n//               />\n//             </Card.Body>\n//           </Card>\n//         ))}\n//       </div>\n//     </div>\n//   </div>\n// );\n\n// function Todo({ todo, index, markTodo, removeTodo }) {\n//   return (\n//     <div\n//       className=\"todo\"\n      \n//     >\n//       <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }}>{todo.text}</span>\n//       <div>\n//         <Button variant=\"outline-success\" onClick={() => markTodo(index)}>✓</Button>{' '}\n//         <Button variant=\"outline-danger\" onClick={() => removeTodo(index)}>✕</Button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// function FormTodo({ addTodo }) {\n//   const [value, setValue] = React.useState(\"\");\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     if (!value) return;\n//     addTodo(value);\n//     setValue(\"\");\n//   };\n\n//   return (\n//     <Form onSubmit={handleSubmit}> \n//     <Form.Group>\n//       <Form.Label><b>Add Todo</b></Form.Label>\n//       <Form.Control type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Add new todo\" />\n//     </Form.Group>\n//     <Button variant=\"primary mb-3\" type=\"submit\">\n//       Submit\n//     </Button>\n//   </Form>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}